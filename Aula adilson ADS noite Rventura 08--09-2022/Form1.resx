<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X5HeMv4fCdhAOK19/wA4knxMIRh//9k=
</value>
  </data>
</root>